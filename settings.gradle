buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.ch.myniva.gradle:s3-build-cache:0.10.0"
        classpath "com.gradle.enterprise:com.gradle.enterprise.gradle.plugin:3.2.1"
    }
}

apply plugin: 'ch.myniva.s3-build-cache'
apply plugin: 'com.gradle.enterprise'

ext.isMasterBuild = false ||
    (System.getenv("GITHUB_REF") == "refs/heads/master") ||
    (System.getenv("BUILD_SOURCEBRANCHNAME") == "master")

buildCache {
    local {
        enabled = !isMasterBuild
    }

    remote(ch.myniva.gradle.caching.s3.AwsS3BuildCache) {
        endpoint = 'fra1.digitaloceanspaces.com'
        region = 'fra1'
        bucket = 'testcontainers'
        path = 'cache'
        push = isMasterBuild && !System.getenv("READ_ONLY_REMOTE_GRADLE_CACHE")
        headers = [
            'x-amz-acl': 'public-read'
        ]
    }
}

rootProject.name = 'testcontainers-java'

// Discover subprojects, and include in the build automatically
rootDir.traverse(type: groovy.io.FileType.FILES, nameFilter: ~/build.gradle/) {
    def dir = it.parentFile

    if (dir != rootDir && dir != file("core")) {  // 'core' is a special case
        def dirName = rootDir.relativePath(dir)
            .replaceAll(File.separator, ":")
            // modules are a special case - should not have modules prefix in project name
            .replaceAll("modules:", "")

        include ":${dirName}"
        project(":${dirName}").projectDir = dir
    }
}

// Add 'core' subproject aliased as 'testcontainers'
include "testcontainers"
project(':testcontainers').projectDir = "$rootDir/core" as File

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
